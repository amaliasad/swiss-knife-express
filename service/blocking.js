const path = require('path')
const { Worker } = require('worker_threads')

const wait = require('./wait')

const waitTime = 100
const workerScript = path.join(__dirname, 'worker.js')

async function doBlockingWork() {
    return new Promise((resolve) => {
        wait(waitTime)
        resolve('payload generated by blocking work')
    })
}

async function doBlockingWorkWithWorkers() {
    return new Promise((resolve, reject) => {

        const worker = new Worker(workerScript, { workerData: { waitTime } })

        worker.on('message', resolve)
        worker.on('error', reject)

        worker.on('exit', (code) => {
            if (code !== 0)
                reject(new Error(`Worker stopped with exit code ${code}`));
        })
    })
}

exports.doBlockingWork = doBlockingWork
exports.doBlockingWorkWithWorkers = doBlockingWorkWithWorkers
